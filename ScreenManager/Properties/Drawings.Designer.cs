//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kinovea.ScreenManager.Properties
{
	using System;
	
	
	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class Drawings
	{
		
		private static global::System.Resources.ResourceManager resourceMan;
		
		private static global::System.Globalization.CultureInfo resourceCulture;
		
		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal Drawings()
		{
		}
		
		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager
		{
			get
			{
				if (object.ReferenceEquals(resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Kinovea.ScreenManager.Properties.Drawings", typeof(Drawings).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}
		
		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Globalization.CultureInfo Culture
		{
			get
			{
				return resourceCulture;
			}
			set
			{
				resourceCulture = value;
			}
		}
		
		internal static System.Drawing.Bitmap angle
		{
			get
			{
				object obj = ResourceManager.GetObject("angle", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap angleinvert
		{
			get
			{
				object obj = ResourceManager.GetObject("angleinvert", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap chrono
		{
			get
			{
				object obj = ResourceManager.GetObject("chrono", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap chronostart
		{
			get
			{
				object obj = ResourceManager.GetObject("chronostart", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap chronostop
		{
			get
			{
				object obj = ResourceManager.GetObject("chronostop", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap circle
		{
			get
			{
				object obj = ResourceManager.GetObject("circle", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap configure
		{
			get
			{
				object obj = ResourceManager.GetObject("configure", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap crossmark
		{
			get
			{
				object obj = ResourceManager.GetObject("crossmark", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap delete
		{
			get
			{
				object obj = ResourceManager.GetObject("delete", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap hide
		{
			get
			{
				object obj = ResourceManager.GetObject("hide", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap label
		{
			get
			{
				object obj = ResourceManager.GetObject("label", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap line
		{
			get
			{
				object obj = ResourceManager.GetObject("line", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap linecalibrate
		{
			get
			{
				object obj = ResourceManager.GetObject("linecalibrate", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap measure
		{
			get
			{
				object obj = ResourceManager.GetObject("measure", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap pencil
		{
			get
			{
				object obj = ResourceManager.GetObject("pencil", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap persistence
		{
			get
			{
				object obj = ResourceManager.GetObject("persistence", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap plane
		{
			get
			{
				object obj = ResourceManager.GetObject("plane", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap track
		{
			get
			{
				object obj = ResourceManager.GetObject("track", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap trackingplay
		{
			get
			{
				object obj = ResourceManager.GetObject("trackingplay", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap trackstop
		{
			get
			{
				object obj = ResourceManager.GetObject("trackstop", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap tracktrim
		{
			get
			{
				object obj = ResourceManager.GetObject("tracktrim", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap trajconfall
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconfall", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap trajconffocus
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconffocus", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
		
		internal static System.Drawing.Bitmap trajconflabel
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconflabel", resourceCulture);
				return ((System.Drawing.Bitmap)(obj));
			}
		}
	}
}
